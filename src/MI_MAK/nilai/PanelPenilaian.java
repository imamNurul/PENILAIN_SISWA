/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MI_MAK.nilai;

import MI_MAK.dao.Kelas;
import MI_MAK.dao.Mapel;
import MI_MAK.dao.Penilaian;
import MI_MAK.service.KelasService;
import MI_MAK.service.MapelService;
import MI_MAK.service.PenilaianService;
import com.stripbandunk.jwidget.model.DynamicTableModel;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.concurrent.ExecutionException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.PatternSyntaxException;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.SwingWorker;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Imam-pc
 */
public class PanelPenilaian extends javax.swing.JPanel {

    private final int thnFrom;
    private final int thnTo;
    private final DynamicTableModel<Penilaian> tableModel;
    public PanelPenilaian() {
        initComponents();
        
        tableModel = new DynamicTableModel<>(Penilaian.class);
        tableNilai.setDynamicModel(tableModel);
        
         Date date = new Date();
        Calendar now = Calendar.getInstance();
        now.setTimeInMillis(date.getTime());
        
        thnFrom = date.getYear()+ 1900;
        thnTo = date.getYear()+ 1900;
        
        ChooseThnAjaranFrom.setValue(thnFrom - 1);
        ChooseThnAjaranTo.setValue(thnTo);
        
        LoadPenilaian(String.valueOf(ChooseThnAjaranFrom.getValue())+"/"+String.valueOf(ChooseThnAjaranTo.getValue()));
        
    }
    
    private final PenilaianService service = new PenilaianService();
    public void LoadPenilaian(String thn){
        
        new SwingWorker<List<Penilaian>, Object>(){

            @Override
            protected List<Penilaian> doInBackground() throws Exception {
                
                Thread.sleep(1000);
                List<Penilaian> list = service.SelectAll(thn);

                return list;
            }

            @Override
            protected void done() {
                try {
                    tableModel.clear();
                    for(Penilaian jsb : get()){
                    tableModel.add(jsb);
                }
                } catch (InterruptedException | ExecutionException ex) {
                    Logger.getLogger(PanelPenilaian.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
  
        }.execute();
        
    }
    
    private void LoadPenilaianParam(String mapel, String kls, String thn, String smstr){
        
        new SwingWorker<List<Penilaian>, Object>(){

            @Override
            protected List<Penilaian> doInBackground() throws Exception {
                
                Thread.sleep(1000);
                List<Penilaian> list = service.SelectNilaiByParam(mapel, kls, thn, smstr);

                return list;
            }

            @Override
            protected void done() {
                try {
                    tableModel.clear();
                    for(Penilaian jsb : get()){
                    tableModel.add(jsb);
                }
                } catch (InterruptedException | ExecutionException ex) {
                    Logger.getLogger(PanelPenilaian.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
  
        }.execute();
        
    }
    
     public void LoadKelasCombo(){
        KelasService ks = new KelasService();
        List<Kelas> list =  ks.selectKelas();
        comboKls.removeAllItems();
        comboKls.addItem("All");
        list.stream().forEach((kelas) -> {
            comboKls.addItem(kelas);
            System.out.println("load Kelas: "+kelas);
        });
    }
     
      public void LoadMapelCombo(){
        MapelService ms = new MapelService();
        List<Mapel> list =  ms.selectMapel();
        comboMapel.removeAllItems();
        comboMapel.addItem("All");
        list.stream().forEach((mp) -> {
            comboMapel.addItem(mp);
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelKdMapel = new javax.swing.JLabel();
        labelNmMapel = new javax.swing.JLabel();
        labelKdKls = new javax.swing.JLabel();
        labelNmKls = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableNilai = new com.stripbandunk.jwidget.JDynamicTable();
        jPanel2 = new javax.swing.JPanel();
        btnTambah = new javax.swing.JButton();
        btnUbah = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        comboMapel = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        comboKls = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        comboSmstr = new javax.swing.JComboBox();
        btnCari = new javax.swing.JButton();
        btnTmplknSmua = new javax.swing.JButton();
        ChooseThnAjaranFrom = new com.toedter.calendar.JYearChooser();
        jLabel10 = new javax.swing.JLabel();
        ChooseThnAjaranTo = new com.toedter.calendar.JYearChooser();
        txtCari = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        labelKdMapel.setText("jLabel11");

        labelNmMapel.setText("jLabel11");

        labelKdKls.setText("jLabel11");

        labelNmKls.setText("jLabel11");

        setOpaque(false);

        tableNilai.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableNilaiMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableNilai);

        jPanel2.setOpaque(false);

        btnTambah.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnTambah.setText("Tambah");
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });
        jPanel2.add(btnTambah);

        btnUbah.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnUbah.setText("Ubah");
        btnUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbahActionPerformed(evt);
            }
        });
        jPanel2.add(btnUbah);

        btnHapus.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });
        jPanel2.add(btnHapus);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Filter By", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 14))); // NOI18N
        jPanel3.setOpaque(false);

        jLabel2.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        jLabel2.setText("Mata Pelajaran ");

        comboMapel.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        comboMapel.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All" }));
        comboMapel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboMapelActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        jLabel3.setText("Kelas");

        comboKls.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        comboKls.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All" }));
        comboKls.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboKlsActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        jLabel4.setText(":");

        jLabel5.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        jLabel5.setText(":");

        jLabel6.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        jLabel6.setText("Tahun Ajaran ");

        jLabel7.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        jLabel7.setText("Semester");

        jLabel8.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        jLabel8.setText(":");

        jLabel9.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        jLabel9.setText(":");

        comboSmstr.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        comboSmstr.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All", "Ganjil", "Genap" }));

        btnCari.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnCari.setText("Cari");
        btnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCariActionPerformed(evt);
            }
        });

        btnTmplknSmua.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnTmplknSmua.setText("Tampilkan Semua");
        btnTmplknSmua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTmplknSmuaActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel10.setText("/");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(comboMapel, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(comboKls, 0, 204, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(ChooseThnAjaranFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ChooseThnAjaranTo, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(comboSmstr, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCari, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTmplknSmua))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(comboMapel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(comboKls, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(comboSmstr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(ChooseThnAjaranFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(ChooseThnAjaranTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 0, Short.MAX_VALUE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btnCari)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTmplknSmua)))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        txtCari.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        txtCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCariKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCariKeyTyped(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        jLabel1.setText("Cari :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCari)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtCari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 366, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tableNilaiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableNilaiMouseClicked
        // TODO add your handling code here:

        if(evt.getClickCount() == 2){
            int index = tableNilai.convertRowIndexToModel(tableNilai.getSelectedRow());
            Penilaian pn = tableModel.get(index);
            DetailNilai detailNilai = new DetailNilai();
            detailNilai.LoadNilaiDetailUbah(pn.getId_nilai());
            detailNilai.detailNilai(pn);
        }

    }//GEN-LAST:event_tableNilaiMouseClicked

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
        // TODO add your handling code here:

        TambahNilai tambahNilai = new TambahNilai();
        tambahNilai.tambahNilai();
        LoadPenilaian(String.valueOf(ChooseThnAjaranFrom.getValue())+"/"+String.valueOf(ChooseThnAjaranTo.getValue()));
        LoadKelasCombo();
        LoadMapelCombo();

    }//GEN-LAST:event_btnTambahActionPerformed

    private void btnUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUbahActionPerformed
        // TODO add your handling code here:

        if(tableNilai.getSelectedRow() != -1){
            int index = tableNilai.convertRowIndexToModel(tableNilai.getSelectedRow());
            Penilaian sw = tableModel.get(index);
            UbahNilai ubh = new UbahNilai();
            ubh.LoadNilaiDetailUbah(sw.getId_nilai());
            ubh.ubahNilai(sw);
            LoadPenilaian(String.valueOf(ChooseThnAjaranFrom.getValue())+"/"+String.valueOf(ChooseThnAjaranTo.getValue()));
            LoadKelasCombo();
            LoadMapelCombo();
        }else{
            JOptionPane.showMessageDialog(this, "silahkan seleksi satu baris");
        }

    }//GEN-LAST:event_btnUbahActionPerformed

    private void comboMapelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboMapelActionPerformed
        // TODO add your handling code here:
        switch (comboMapel.getSelectedIndex()) {
            case -1:
                System.out.println("combo kelas index 1 : "+comboKls.getSelectedIndex());
                System.out.println("combo kelas item 1 : "+comboKls.getSelectedItem());
                // JFrame frame = new JFrame("Warning");
                // JOptionPane.showMessageDialog(frame, "All Kelas");
                break;
            case 0:
                System.out.println("combo kelas index 2: "+comboKls.getSelectedIndex());
                System.out.println("combo kelas item 2: "+comboKls.getSelectedItem());
                // JFrame frame = new JFrame("Warning");
                // JOptionPane.showMessageDialog(frame, "All Kelas");
                break;
            default:
                String lblKodeMapel;
                lblKodeMapel = comboMapel.getSelectedItem().toString();
                System.out.println("combo mapel: "+lblKodeMapel);
                String[] prt = lblKodeMapel.split("-");
                String varStrKode = prt[0];
                String varStrNama = prt[1];
                System.out.println("split kode: "+varStrKode);
                System.out.println("split nama: "+varStrNama);
                labelKdMapel.setText(varStrKode);
                labelNmMapel.setText(varStrNama);
                break;
        }

    }//GEN-LAST:event_comboMapelActionPerformed

    private void comboKlsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboKlsActionPerformed
        // TODO add your handling code here:
        switch (comboKls.getSelectedIndex()) {
            case -1:
                System.out.println("combo kelas index 1 : "+comboKls.getSelectedIndex());
                System.out.println("combo kelas item 1 : "+comboKls.getSelectedItem());
                // JFrame frame = new JFrame("Warning");
                // JOptionPane.showMessageDialog(frame, "All Kelas");
                break;
            case 0:
                System.out.println("combo kelas index 2: "+comboKls.getSelectedIndex());
                System.out.println("combo kelas item 2: "+comboKls.getSelectedItem());
                // JFrame frame = new JFrame("Warning");
                // JOptionPane.showMessageDialog(frame, "All Kelas");
                break;
            default:
                String lblKodeKls;
                lblKodeKls = comboKls.getSelectedItem().toString();
                System.out.println("combo kelas: "+lblKodeKls);
                String[] prt = lblKodeKls.split("-");
                String varStrKode = prt[0];
                String varStrNama = prt[1];
                System.out.println("split kode: "+varStrKode);
                System.out.println("split nama: "+varStrNama);
                labelKdKls.setText(varStrKode);
                labelNmKls.setText(varStrNama);
                break;
        }

    }//GEN-LAST:event_comboKlsActionPerformed

    private void btnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCariActionPerformed
        // TODO add your handling code here:

        String varMapel;
        String varKls;
        String varSmstr;
        String varThn;

        String thF;
        String thT;
        if(comboMapel.getSelectedItem().equals("All")){
            varMapel = "";
        }else{
            varMapel = labelKdMapel.getText();
        }

        if(comboKls.getSelectedItem().equals("All")){
            varKls = "";
        }else{
            varKls = labelKdKls.getText();
        }

        if(comboSmstr.getSelectedItem().equals("All")){
            varSmstr = "";
        }else{
            varSmstr = comboSmstr.getSelectedItem().toString();
        }

        if(ChooseThnAjaranFrom.getValue() <= 0 || ChooseThnAjaranTo.getValue() <= 0){
            thF = "";
            thT = "";
            varThn = thF+"/"+thT;
        }else{
            thF = String.valueOf(ChooseThnAjaranFrom.getValue());
            thT = String.valueOf(ChooseThnAjaranTo.getValue());
            varThn = thF+"/"+thT;
        }

        System.out.println("param Nilai mapel All: "+ varMapel);
        System.out.println("param Nilai kelas All: "+ varKls);
        System.out.println("param Nilai thn All: "+ varThn);
        System.out.println("param Nilai smstr All: "+ varSmstr);

        LoadPenilaianParam(varMapel, varKls, varThn, varSmstr);

    }//GEN-LAST:event_btnCariActionPerformed

    private void btnTmplknSmuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTmplknSmuaActionPerformed
        // TODO add your handling code here:

        LoadPenilaian(String.valueOf(ChooseThnAjaranFrom.getValue())+"/"+String.valueOf(ChooseThnAjaranTo.getValue()));
        comboKls.setSelectedItem("All");
        comboMapel.setSelectedItem("All");
        comboSmstr.setSelectedItem("All");
        ChooseThnAjaranFrom.setValue(thnFrom - 1);
        ChooseThnAjaranTo.setValue(thnTo);

    }//GEN-LAST:event_btnTmplknSmuaActionPerformed

    private void txtCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCariKeyPressed
        // TODO add your handling code here:

        try{
            String cari = txtCari.getText();
            TableRowSorter<TableModel> sorter = (TableRowSorter<TableModel>) tableNilai.getRowSorter();
            sorter.setRowFilter(RowFilter.regexFilter(cari));
        }catch(PatternSyntaxException ex){

        }
    }//GEN-LAST:event_txtCariKeyPressed

    private void txtCariKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCariKeyTyped
        // TODO add your handling code here:

        try{
            String cari = txtCari.getText();
            TableRowSorter<TableModel> sorter = (TableRowSorter<TableModel>) tableNilai.getRowSorter();
            sorter.setRowFilter(RowFilter.regexFilter(cari));
        }catch(PatternSyntaxException ex){

        }
    }//GEN-LAST:event_txtCariKeyTyped

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        // TODO add your handling code here:

        if(tableNilai.getSelectedRow() != -1){
            int index = tableNilai.convertRowIndexToModel(tableNilai.getSelectedRow());
            Penilaian sw = tableModel.get(index);
            
            int closing;
            closing = JOptionPane.showConfirmDialog(this,
                "Apakah anda yakin, ingin Hapus", "Konfirmasi Hapus Nilai",JOptionPane.YES_NO_OPTION);
            if (closing==0){
                
                PenilaianService ps = new PenilaianService();
                PenilaianService psd = new PenilaianService();
                
                ps.deleteDetail(sw.getId_nilai());
                psd.delete(sw.getId());
                
                LoadPenilaian(String.valueOf(ChooseThnAjaranFrom.getValue())+"/"+String.valueOf(ChooseThnAjaranTo.getValue()));
                comboKls.setSelectedItem("All");
                comboMapel.setSelectedItem("All");
                comboSmstr.setSelectedItem("All");
                ChooseThnAjaranFrom.setValue(thnFrom - 1);
                ChooseThnAjaranTo.setValue(thnTo);
            }else{
                this.show();
            }
            
          
        }else{
            JOptionPane.showMessageDialog(this, "silahkan seleksi satu baris");
        }

    }//GEN-LAST:event_btnHapusActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JYearChooser ChooseThnAjaranFrom;
    private com.toedter.calendar.JYearChooser ChooseThnAjaranTo;
    private javax.swing.JButton btnCari;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnTambah;
    private javax.swing.JButton btnTmplknSmua;
    private javax.swing.JButton btnUbah;
    private javax.swing.JComboBox comboKls;
    private javax.swing.JComboBox comboMapel;
    private javax.swing.JComboBox comboSmstr;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelKdKls;
    private javax.swing.JLabel labelKdMapel;
    private javax.swing.JLabel labelNmKls;
    private javax.swing.JLabel labelNmMapel;
    private com.stripbandunk.jwidget.JDynamicTable tableNilai;
    private javax.swing.JTextField txtCari;
    // End of variables declaration//GEN-END:variables
}
